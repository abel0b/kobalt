name: test

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      config:
        description: Configuration
        required: true
        default: debug
      debug_logs:
        description: Enable debug logging
        required: false
        default:

jobs:
  test-unix:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        cc: [clang]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Lua
        uses: abel0b/setup-lua@v1
        with:
          lua-version: "5.3.5"

      - name: Install premake
        uses: abel0b/setup-premake@v1

      - name: Configure workflow
        if: github.event_name == 'workflow_dispatch'
        run: |
          for log in ${{ github.event.inputs.debug_logs }}; do echo "DEBUG_$log=1" >> $GITHUB_ENV; done
          echo  "CONFIG=${{ github.event.inputs.config }}" >> $GITHUB_ENV

      - name: Generate project file
        run: premake5 --cc=${{ matrix.cc }} gmake2
      
      - name: Compile
        run: make -j$(nproc) config=$CONFIG

      - name: Run examples
        run: for example in doc/examples/*.kl; do ./bin/${{ matrix.config }}/kobalt $example; done

  test-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        config: [debug]
        cc: [cl]

    steps:
      - uses: actions/checkout@v2

      - name: Install Lua
        uses: abel0b/setup-lua@v1
        with:
          lua-version: "5.3.5"

      - name: Install premake
        uses: abel0b/setup-premake@v1

      - name: Configure workflow
        if: github.event_name == 'workflow_dispatch'
        run: |
          foreach($log in "${{ github.event.inputs.debug_logs }}".split(" ")) { echo "DEBUG_$log=1" >> $env:GITHUB_ENV }
          echo  "CONFIG=${{ github.event.inputs.config }}" >> $env:GITHUB_ENV

      - name: Generate project file
        run: premake5 --os=windows vs2019

      - name: Generate version header
        run: lua lib/include/kobalt/version.h.lua "$((get-childitem -name doc/changelog | select-string alpha) -replace "md","${{ github.run_number }}")" > lib/include/kobalt/version.h

      - name: Compile
        run: |
          .\tools\vsenv.ps1
          msbuild kobalt.sln -m -p:CLToolExe=${{ matrix.cc }} -p:Configuration=$env:CONFIG

      - name: Run examples
        run: |
          .\tools\vsenv.ps1
          get-childitem .\doc\examples | foreach-object { echo $_.FullName; .\bin\${{ matrix.config }}\kobalt.exe $_.FullName }
