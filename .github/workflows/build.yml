name: build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        config: [release]
        cc: [gcc, clang]
        include:
          - os: ubuntu-latest
            osname: linux
          - os: macos-latest
            osname: macosx

    steps:
      - uses: actions/checkout@v2

      - name: Install premake
        run : |
          wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-${{ matrix.osname }}.tar.gz
          tar xvzf premake-5.0.0-alpha15-${{ matrix.osname }}.tar.gz

      - name: Generate project file
        run: ./premake5 --os=${{ matrix.osname }} gmake2

      - name: Compile
        run: make -j$(nproc) CC=${{ matrix.cc }} config=${{ matrix.config }}

      - name: Say hello world
        run: ./bin/${{ matrix.config }}/kobalt doc/examples/hello_world.kb

      - name: Create release archive
        if: github.ref == 'refs/heads/master'
        run: ./premake5 release

      - name: Upload release archive
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: kobalt-prerelease-${{ matrix.osname }}
          path: dist/kobalt-prerelease-${{ matrix.osname }}.tar.gz

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        config: [release]
        cc: [cl]

    steps:
      - uses: actions/checkout@v2

      - name: Install premake
        run: |
          Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip" -OutFile "premake-5.0.0-alpha15-windows.zip"
          Expand-Archive -DestinationPath . -Path premake-5.0.0-alpha15-windows.zip

      - name: Generate project file
        run: ./premake5 --os=windows vs2019

      - name: Compile
        run: |
          .\tools\vsenv.ps1
          msbuild kobalt.sln -m -p:CLToolExe=${{ matrix.cc }} -p:Configuration=${{ matrix.config }}

      - name: Say hello world
        run: |
          .\tools\vsenv.ps1
          .\bin\${{ matrix.config }}\kobalt doc\examples\hello_world.kb

      - name: Create release archive
        if: github.ref == 'refs/heads/master'
        run: ./premake5 release

      - name: Upload release archive
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: kobalt-prerelease-windows
          path: dist/kobalt-prerelease-windows.zip
    
  release:
    name: Release
    needs: [build-unix, build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: kobalt-prerelease-linux
      
      - uses: actions/download-artifact@v2
        with:
          name: kobalt-prerelease-macosx
      
      - uses: actions/download-artifact@v2
        with:
          name: kobalt-prerelease-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prerelease
          release_name: Prerelease
          draft: false
          prerelease: true
          allowUpdates: true
          body: These are the artifacts obtained for the last successful build on master branch.
      
      - name: Upload release assets
        run: hub release edit -a kobalt-prerelease-linux.tar.gz -a kobalt-prerelease-macosx.tar.gz -a kobalt-prerelease-windows.zip  -m "" prerelease
