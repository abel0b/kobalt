name: build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        config: [release]
        cc: [gcc, clang]
        include:
          - os: ubuntu-latest
            osname: "linux"
          - os: macos-latest
            osname: "macosx"

    steps:
    - uses: actions/checkout@v2

    - name: Install premake
      run : |
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-${{ matrix.osname }}.tar.gz
        tar xvzf premake-5.0.0-alpha15-${{ matrix.osname }}.tar.gz --directory=/usr/bin
        
    - name: Generate project file
      run: premake5 --os=${{ matrix.osname }} --cc=${{ matrix.cc }} gmake2

    - name: Compile
      run: make config=${{ matrix.config }} -j$(nproc)

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        config: [release]
        cc: [gcc, clang, cl]

    steps:
    - uses: actions/checkout@v2

    - name: Install premake
      run: |
        Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip" -OutFile "premake-5.0.0-alpha15-windows.zip"
        Expand-Archive -DestinationPath . -Path premake-5.0.0-alpha15-windows.zip

    - name: Generate project file
      run: ./premake5 --cc=${{ matrix.cc }} --os=windows vs2019

    - name: Compile
      run: |
        .\contrib\vsenv.ps1
        msbuild kobalt.sln -m -p:Configuration=${{ matrix.config }}
